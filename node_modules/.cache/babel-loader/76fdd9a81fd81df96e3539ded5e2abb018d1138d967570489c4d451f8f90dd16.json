{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b96114de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"draggableNode\",\n  class: \"node-object\"\n};\nconst _hoisted_2 = {\n  class: \"node-header\"\n};\nconst _hoisted_3 = {\n  class: \"node-middle\"\n};\nconst _hoisted_4 = {\n  class: \"node-inputs\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"node-body\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"node-outputs\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"node-status\"\n}, \"(0 0 0)\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"node-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.numInputs), 1 /* TEXT */), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.numOutputs), 1 /* TEXT */)]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.type), 1 /* TEXT */)])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","name","_hoisted_3","_hoisted_4","numInputs","_hoisted_5","_hoisted_6","numOutputs","_hoisted_7","_hoisted_8","type"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/NodeObject.vue"],"sourcesContent":["<template>\n  <div ref=\"draggableNode\" class=\"node-object\">\n    <div class=\"node-header\">\n      {{ name }}\n    </div>\n    <div class=\"node-middle\">\n      <div class=\"node-inputs\">{{ numInputs }}</div>\n      <div class=\"node-body\"></div>\n      <div class=\"node-outputs\">{{ numOutputs }}</div>\n    </div>\n    <div class=\"node-status\">(0 0 0)</div>\n    <div class=\"node-footer\">\n      <p>{{ type }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref } from \"vue\";\nimport interact from \"interactjs\";\n\nexport default defineComponent({\n  name: \"NodeObject\",\n  props: {\n    initialX: {\n      type: Number,\n      required: true,\n    },\n    initialY: {\n      type: Number,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    numInputs: {\n      type: Number,\n      required: true,\n    },\n    numOutputs: {\n      type: Number,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props) {\n    const screenX = ref(props.initialX);\n    const screenY = ref(props.initialY);\n    const draggableNode = ref(null);\n\n    const initInteract = (selector) => {\n      interact(selector).draggable({\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\n        },\n        onmove: dragMoveListener,\n        onend: onDragEnd,\n      });\n    };\n\n    const dragMoveListener = (event) => {\n      event.stopPropagation();\n\n      const target = event.target;\n\n      const initialX = parseFloat(target.getAttribute(\"data-x\")) || 0;\n      const initialY = parseFloat(target.getAttribute(\"data-y\")) || 0;\n\n      const x = initialX + event.dx;\n      const y = initialY + event.dy;\n\n      target.style.webkitTransform = target.style.transform =\n        \"translate(\" + x + \"px, \" + y + \"px)\";\n\n      target.setAttribute(\"data-x\", x.toString());\n      target.setAttribute(\"data-y\", y.toString());\n    };\n\n    const onDragEnd = (event) => {\n      const target = event.target;\n      screenX.value = target.getBoundingClientRect().left;\n      screenY.value = target.getBoundingClientRect().top;\n    };\n\n    onMounted(() => {\n      if (draggableNode.value) {\n        const initialTransform = `translate(${screenX.value}px, ${screenY.value}px)`;\n        draggableNode.value.style.transform = initialTransform;\n        draggableNode.value.setAttribute(\"data-x\", screenX.value.toString());\n        draggableNode.value.setAttribute(\"data-y\", screenY.value.toString());\n        initInteract(draggableNode.value);\n      }\n    });\n\n    return { draggableNode, screenX, screenY };\n  },\n});\n</script>\n\n<style scoped>\n.node-object {\n  border-radius: 5%;\n  border: 1px solid black;\n  width: 70px;\n  height: 70px;\n  /* background-color: rgb(255, 149, 51); */\n  /* color: #fff; */\n  /* padding: 5px; */\n  position: absolute;\n}\n.node-body {\n  border-radius: 5%;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(255, 149, 51);\n  color: #fff;\n  padding: 5px;\n  position: absolute;\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC,eAAe;EAACC,KAAK,EAAC;;;EACxBA,KAAK,EAAC;AAAa;;EAGnBA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAa;gEACxBC,mBAAA,CAA6B;EAAxBD,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAc;gEAE3BC,mBAAA,CAAsC;EAAjCD,KAAK,EAAC;AAAa,GAAC,SAAO;;EAC3BA,KAAK,EAAC;AAAa;;uBAV1BE,mBAAA,CAaM,OAbNC,UAaM,GAZJF,mBAAA,CAEM,OAFNG,UAEM,EAAAC,gBAAA,CADDC,IAAA,CAAAC,IAAI,kBAETN,mBAAA,CAIM,OAJNO,UAIM,GAHJP,mBAAA,CAA8C,OAA9CQ,UAA8C,EAAAJ,gBAAA,CAAlBC,IAAA,CAAAI,SAAS,kBACrCC,UAA6B,EAC7BV,mBAAA,CAAgD,OAAhDW,UAAgD,EAAAP,gBAAA,CAAnBC,IAAA,CAAAO,UAAU,iB,GAEzCC,UAAsC,EACtCb,mBAAA,CAEM,OAFNc,UAEM,GADJd,mBAAA,CAAiB,WAAAI,gBAAA,CAAXC,IAAA,CAAAU,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}