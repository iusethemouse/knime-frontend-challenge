{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b96114de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"draggableNode\",\n  class: \"node-object\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, \" Draggable Node \", 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/NodeObject.vue"],"sourcesContent":["<template>\n    <div ref=\"draggableNode\" class=\"node-object\">\n      Draggable Node\n    </div>\n</template>\n\n<script>\nimport interact from \"interactjs\";\n\nexport default {\n  name: \"NodeObject\",\n  data() {\n    return {\n      screenX: 0,\n      screenY: 0\n    };\n  },\n  mounted: function() {\n    let draggableNode = this.$refs.draggableNode;\n    this.initInteract(draggableNode);\n  },\n  methods: {\n    initInteract: function(selector) {\n      interact(selector).draggable({\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n        },\n\n        // call this function on every dragmove event\n        onmove: this.dragMoveListener,\n        \n        // call this function on every dragend event\n        onend: this.onDragEnd\n      });\n    },\n    dragMoveListener: function(event) {\n      var target = event.target,\n        // keep the dragged position in the data-x/data-y attributes\n        x =\n          (parseFloat(target.getAttribute(\"data-x\")) || this.screenX) +\n          event.dx,\n        y =\n          (parseFloat(target.getAttribute(\"data-y\")) || this.screenY) +\n          event.dy;\n\n      // translate the element\n      target.style.webkitTransform = target.style.transform =\n        \"translate(\" + x + \"px, \" + y + \"px)\";\n\n      // update the posiion attributes\n      target.setAttribute(\"data-x\", x);\n      target.setAttribute(\"data-y\", y);\n    },\n    onDragEnd: function(event) {\n      var target = event.target;\n      console.log(target);\n      // update the state\n      this.screenX = target.getBoundingClientRect().left;\n      this.screenY = target.getBoundingClientRect().top;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.node-object {\n  width: 100px;\n  height: 100px;\n  background-color: teal;\n  color: #fff;\n  padding: 5px;\n  position: absolute;\n}\n</style>\n"],"mappings":";;;EACSA,GAAG,EAAC,eAAe;EAACC,KAAK,EAAC;;;uBAA/BC,mBAAA,CAEM,OAFNC,UAEM,EAFuC,kBAE7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}