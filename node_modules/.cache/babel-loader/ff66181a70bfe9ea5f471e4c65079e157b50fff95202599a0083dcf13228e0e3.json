{"ast":null,"code":"import { defineComponent, ref } from \"vue\";\nexport default defineComponent({\n  name: \"SearchField\",\n  setup(props, {\n    emit\n  }) {\n    const searchText = ref(\"\");\n    const suggestions = ref([]);\n    const allNodes = [{\n      id: 0,\n      name: \"Dummy Node\",\n      numInputs: 1,\n      numOutputs: 1,\n      type: \"Source\",\n      color: \"#c6d157\",\n      icon: \"dummy_node.png\"\n    }, {\n      id: 1,\n      name: \"Data Generator\",\n      numInputs: 0,\n      numOutputs: 2,\n      type: \"Source\",\n      color: \"#f19a4a\",\n      icon: \"data_generator.png\"\n    }, {\n      id: 2,\n      name: \"CASE Switch Data (Start)\",\n      numInputs: 1,\n      numOutputs: 3,\n      type: \"Manipulator\",\n      color: \"#f9da49\",\n      icon: \"case_switch_start.png\"\n    }, {\n      id: 3,\n      name: \"Cluster Assigner\",\n      numInputs: 1,\n      numOutputs: 1,\n      type: \"Predictor\",\n      color: \"#60b259\",\n      icon: \"cluster_assigner.png\"\n    }, {\n      id: 4,\n      name: \"Cell Extractor\",\n      numInputs: 1,\n      numOutputs: 1,\n      type: \"Manipulator\",\n      color: \"#f9da49\",\n      icon: \"cell-extractor.png\"\n    }];\n    const updateSuggestions = () => {\n      suggestions.value = allNodes.filter(node => node.name.toLowerCase().includes(searchText.value.toLowerCase()));\n    };\n    const selectSuggestion = (index = -1) => {\n      if (index < 0) {\n        index = suggestions.value.findIndex(suggestion => suggestion.toLowerCase() === searchText.value.toLowerCase());\n      }\n      if (index >= 0) {\n        const selectedNode = suggestions.value[index];\n        searchText.value = \"\";\n        suggestions.value = [];\n        // Emit the event with the selected node\n        emit(\"add-node\", selectedNode);\n      }\n    };\n    return {\n      searchText,\n      suggestions,\n      updateSuggestions,\n      selectSuggestion\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","name","setup","props","emit","searchText","suggestions","allNodes","id","numInputs","numOutputs","type","color","icon","updateSuggestions","value","filter","node","toLowerCase","includes","selectSuggestion","index","findIndex","suggestion","selectedNode"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/SearchField.vue"],"sourcesContent":["<template>\n  <div class=\"search-field\">\n    <div class=\"input-container\">\n      <input\n        type=\"text\"\n        v-model=\"searchText\"\n        @input=\"updateSuggestions\"\n        @keydown.enter=\"selectSuggestion\"\n        placeholder=\"Add new node...\"\n      />\n      <ul v-if=\"suggestions.length\" class=\"suggestion-list\">\n        <li\n          v-for=\"(suggestion, index) in suggestions\"\n          :key=\"index\"\n          @click=\"selectSuggestion(index)\"\n        >\n          {{ suggestion.name }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from \"vue\";\n\nexport default defineComponent({\n  name: \"SearchField\",\n  setup(props, { emit }) {\n    const searchText = ref(\"\");\n    const suggestions = ref([]);\n    const allNodes = [\n      {\n        id: 0,\n        name: \"Dummy Node\",\n        numInputs: 1,\n        numOutputs: 1,\n        type: \"Source\",\n        color: \"#c6d157\",\n        icon: \"dummy_node.png\",\n      },\n      {\n        id: 1,\n        name: \"Data Generator\",\n        numInputs: 0,\n        numOutputs: 2,\n        type: \"Source\",\n        color: \"#f19a4a\",\n        icon: \"data_generator.png\",\n      },\n      {\n        id: 2,\n        name: \"CASE Switch Data (Start)\",\n        numInputs: 1,\n        numOutputs: 3,\n        type: \"Manipulator\",\n        color: \"#f9da49\",\n        icon: \"case_switch_start.png\",\n      },\n      {\n        id: 3,\n        name: \"Cluster Assigner\",\n        numInputs: 1,\n        numOutputs: 1,\n        type: \"Predictor\",\n        color: \"#60b259\",\n        icon: \"cluster_assigner.png\",\n      },\n      {\n        id: 4,\n        name: \"Cell Extractor\",\n        numInputs: 1,\n        numOutputs: 1,\n        type: \"Manipulator\",\n        color: \"#f9da49\",\n        icon: \"cell-extractor.png\",\n      },\n    ];\n\n    const updateSuggestions = () => {\n      suggestions.value = allNodes.filter((node) =>\n        node.name.toLowerCase().includes(searchText.value.toLowerCase())\n      );\n    };\n\n    const selectSuggestion = (index = -1) => {\n      if (index < 0) {\n        index = suggestions.value.findIndex(\n          (suggestion) =>\n            suggestion.toLowerCase() === searchText.value.toLowerCase()\n        );\n      }\n\n      if (index >= 0) {\n        const selectedNode = suggestions.value[index];\n        searchText.value = \"\";\n        suggestions.value = [];\n        // Emit the event with the selected node\n        emit(\"add-node\", selectedNode);\n      }\n    };\n\n    return { searchText, suggestions, updateSuggestions, selectSuggestion };\n  },\n});\n</script>\n\n<style scoped>\n.search-field {\n  margin: 10px;\n}\n\n.input-container {\n  position: relative;\n  display: inline-block;\n}\n\ninput {\n  width: 200px;\n}\n\n.suggestion-list {\n  position: absolute;\n  background-color: white;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  max-height: 200px;\n  overflow-y: auto;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.suggestion-list li {\n  padding: 10px;\n  cursor: pointer;\n}\n\n.suggestion-list li:hover {\n  background-color: #eee;\n}\n</style>\n"],"mappings":"AAwBA,SAASA,eAAe,EAAEC,GAAE,QAAS,KAAK;AAE1C,eAAeD,eAAe,CAAC;EAC7BE,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAACC,KAAK,EAAE;IAAEC;EAAK,CAAC,EAAE;IACrB,MAAMC,UAAS,GAAIL,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMM,WAAU,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMO,QAAO,GAAI,CACf;MACEC,EAAE,EAAE,CAAC;MACLP,IAAI,EAAE,YAAY;MAClBQ,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLP,IAAI,EAAE,gBAAgB;MACtBQ,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLP,IAAI,EAAE,0BAA0B;MAChCQ,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLP,IAAI,EAAE,kBAAkB;MACxBQ,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,WAAW;MACjBC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLP,IAAI,EAAE,gBAAgB;MACtBQ,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC,CACF;IAED,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9BR,WAAW,CAACS,KAAI,GAAIR,QAAQ,CAACS,MAAM,CAAEC,IAAI,IACvCA,IAAI,CAAChB,IAAI,CAACiB,WAAW,EAAE,CAACC,QAAQ,CAACd,UAAU,CAACU,KAAK,CAACG,WAAW,EAAE,EAChE;IACH,CAAC;IAED,MAAME,gBAAe,GAAIA,CAACC,KAAI,GAAI,CAAC,CAAC,KAAK;MACvC,IAAIA,KAAI,GAAI,CAAC,EAAE;QACbA,KAAI,GAAIf,WAAW,CAACS,KAAK,CAACO,SAAS,CAChCC,UAAU,IACTA,UAAU,CAACL,WAAW,EAAC,KAAMb,UAAU,CAACU,KAAK,CAACG,WAAW,EAAC,CAC7D;MACH;MAEA,IAAIG,KAAI,IAAK,CAAC,EAAE;QACd,MAAMG,YAAW,GAAIlB,WAAW,CAACS,KAAK,CAACM,KAAK,CAAC;QAC7ChB,UAAU,CAACU,KAAI,GAAI,EAAE;QACrBT,WAAW,CAACS,KAAI,GAAI,EAAE;QACtB;QACAX,IAAI,CAAC,UAAU,EAAEoB,YAAY,CAAC;MAChC;IACF,CAAC;IAED,OAAO;MAAEnB,UAAU;MAAEC,WAAW;MAAEQ,iBAAiB;MAAEM;IAAiB,CAAC;EACzE;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}