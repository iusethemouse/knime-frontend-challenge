{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b96114de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"draggableNode\",\n  class: \"node-object\"\n};\nconst _hoisted_2 = {\n  class: \"node-container\"\n};\nconst _hoisted_3 = {\n  class: \"node-name\"\n};\nconst _hoisted_4 = {\n  class: \"node\"\n};\nconst _hoisted_5 = {\n  class: \"node-type\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NodeInput = _resolveComponent(\"NodeInput\");\n  const _component_NodeOutput = _resolveComponent(\"NodeOutput\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.inputs, (input, index) => {\n    return _openBlock(), _createBlock(_component_NodeInput, {\n      key: index\n    });\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.outputs, (output, index) => {\n    return _openBlock(), _createBlock(_component_NodeOutput, {\n      key: index\n    });\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(_ctx.type), 1 /* TEXT */)]), _createCommentVNode(\" <div class=\\\"node-header\\\">\\n      {{ name }}\\n    </div>\\n    <div class=\\\"node-middle\\\">\\n      <div class=\\\"node-inputs\\\">{{ numInputs }}</div>\\n      <div class=\\\"node-body\\\"></div>\\n      <div class=\\\"node-outputs\\\">{{ numOutputs }}</div>\\n    </div>\\n    <div class=\\\"node-status\\\">(0 0 0)</div>\\n    <div class=\\\"node-footer\\\">\\n      <p>{{ type }}</p>\\n    </div> \")], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","name","_hoisted_4","_Fragment","_renderList","inputs","input","index","_createBlock","_component_NodeInput","key","outputs","output","_component_NodeOutput","_hoisted_5","type","_createCommentVNode"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/NodeObject.vue"],"sourcesContent":["<template>\n  <div ref=\"draggableNode\" class=\"node-object\">\n    <div class=\"node-container\">\n      <p class=\"node-name\">{{ name }}</p>\n      <div class=\"node\">\n        <NodeInput v-for=\"(input, index) in inputs\" :key=\"index\" />\n        <NodeOutput v-for=\"(output, index) in outputs\" :key=\"index\" />\n      </div>\n      <p class=\"node-type\">{{ type }}</p>\n    </div>\n\n    <!-- <div class=\"node-header\">\n      {{ name }}\n    </div>\n    <div class=\"node-middle\">\n      <div class=\"node-inputs\">{{ numInputs }}</div>\n      <div class=\"node-body\"></div>\n      <div class=\"node-outputs\">{{ numOutputs }}</div>\n    </div>\n    <div class=\"node-status\">(0 0 0)</div>\n    <div class=\"node-footer\">\n      <p>{{ type }}</p>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref } from \"vue\";\nimport interact from \"interactjs\";\nimport InputPort from \"./InputPort.vue\";\nimport OutputPort from \"./OutputPort.vue\";\n\nexport default defineComponent({\n  name: \"NodeObject\",\n  // components: {\n  //   InputPort,\n  //   OutputPort,\n  // },\n  props: {\n    initialX: {\n      type: Number,\n      required: true,\n    },\n    initialY: {\n      type: Number,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    numInputs: {\n      type: Number,\n      required: true,\n    },\n    numOutputs: {\n      type: Number,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props) {\n    const screenX = ref(props.initialX);\n    const screenY = ref(props.initialY);\n    const draggableNode = ref(null);\n\n    const initInteract = (selector) => {\n      interact(selector).draggable({\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\n        },\n        onmove: dragMoveListener,\n        onend: onDragEnd,\n      });\n    };\n\n    const dragMoveListener = (event) => {\n      event.stopPropagation();\n\n      const target = event.target;\n\n      const initialX = parseFloat(target.getAttribute(\"data-x\")) || 0;\n      const initialY = parseFloat(target.getAttribute(\"data-y\")) || 0;\n\n      const x = initialX + event.dx;\n      const y = initialY + event.dy;\n\n      target.style.webkitTransform = target.style.transform =\n        \"translate(\" + x + \"px, \" + y + \"px)\";\n\n      target.setAttribute(\"data-x\", x.toString());\n      target.setAttribute(\"data-y\", y.toString());\n    };\n\n    const onDragEnd = (event) => {\n      const target = event.target;\n      screenX.value = target.getBoundingClientRect().left;\n      screenY.value = target.getBoundingClientRect().top;\n    };\n\n    onMounted(() => {\n      if (draggableNode.value) {\n        const initialTransform = `translate(${screenX.value}px, ${screenY.value}px)`;\n        draggableNode.value.style.transform = initialTransform;\n        draggableNode.value.setAttribute(\"data-x\", screenX.value.toString());\n        draggableNode.value.setAttribute(\"data-y\", screenY.value.toString());\n        initInteract(draggableNode.value);\n      }\n    });\n\n    return { draggableNode, screenX, screenY };\n  },\n});\n</script>\n\n<style scoped>\n.node-object {\n  border-radius: 5%;\n  border: 1px solid black;\n  width: 70px;\n  height: 70px;\n  /* background-color: rgb(255, 149, 51); */\n  /* color: #fff; */\n  /* padding: 5px; */\n  position: absolute;\n}\n.node-body {\n  border-radius: 5%;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(255, 149, 51);\n  color: #fff;\n  padding: 5px;\n  position: absolute;\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC,eAAe;EAACC,KAAK,EAAC;;;EACxBA,KAAK,EAAC;AAAgB;;EACtBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAM;;EAIdA,KAAK,EAAC;AAAW;;;;uBAPxBC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAAmC,KAAnCE,UAAmC,EAAAC,gBAAA,CAAXC,IAAA,CAAAC,IAAI,kBAC5BL,mBAAA,CAGM,OAHNM,UAGM,I,kBAFJR,mBAAA,CAA2DS,SAAA,QAAAC,WAAA,CAAvBJ,IAAA,CAAAK,MAAM,GAAvBC,KAAK,EAAEC,KAAK;yBAA/BC,YAAA,CAA2DC,oBAAA;MAAdC,GAAG,EAAEH;IAAK;qDACvDb,mBAAA,CAA8DS,SAAA,QAAAC,WAAA,CAAxBJ,IAAA,CAAAW,OAAO,GAAzBC,MAAM,EAAEL,KAAK;yBAAjCC,YAAA,CAA8DK,qBAAA;MAAdH,GAAG,EAAEH;IAAK;oCAE5DX,mBAAA,CAAmC,KAAnCkB,UAAmC,EAAAf,gBAAA,CAAXC,IAAA,CAAAe,IAAI,iB,GAG9BC,mBAAA,yXAWU,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}