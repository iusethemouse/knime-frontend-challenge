{"ast":null,"code":"import { defineComponent, onMounted, ref, computed } from \"vue\";\nimport interact from \"interactjs\";\nimport InputPort from \"./node-components/InputPort.vue\";\nimport OutputPort from \"./node-components/OutputPort.vue\";\nimport NodeStatus from \"./node-components/NodeStatus.vue\";\nexport default defineComponent({\n  name: \"NodeObject\",\n  components: {\n    InputPort,\n    OutputPort,\n    NodeStatus\n  },\n  props: {\n    initialX: {\n      type: Number,\n      required: true\n    },\n    initialY: {\n      type: Number,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    numInputs: {\n      type: Number,\n      required: true\n    },\n    numOutputs: {\n      type: Number,\n      required: true\n    },\n    type: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    },\n    icon: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const screenX = ref(props.initialX);\n    const screenY = ref(props.initialY);\n    const draggableNode = ref(null);\n    const iconPath = computed(() => {\n      return require(`../assets/${props.icon}`);\n    });\n    const initInteract = selector => {\n      interact(selector).draggable({\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: {\n            top: 0,\n            left: 0,\n            bottom: 1,\n            right: 1\n          }\n        },\n        onmove: dragMoveListener,\n        onend: onDragEnd\n      });\n    };\n    const dragMoveListener = event => {\n      event.stopPropagation();\n      const target = event.target;\n      const initialX = parseFloat(target.getAttribute(\"data-x\")) || 0;\n      const initialY = parseFloat(target.getAttribute(\"data-y\")) || 0;\n      const x = initialX + event.dx;\n      const y = initialY + event.dy;\n      target.style.webkitTransform = target.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n      target.setAttribute(\"data-x\", x.toString());\n      target.setAttribute(\"data-y\", y.toString());\n    };\n    const onDragEnd = event => {\n      const target = event.target;\n      screenX.value = target.getBoundingClientRect().left;\n      screenY.value = target.getBoundingClientRect().top;\n    };\n    onMounted(() => {\n      if (draggableNode.value) {\n        const initialTransform = `translate(${screenX.value}px, ${screenY.value}px)`;\n        draggableNode.value.style.transform = initialTransform;\n        draggableNode.value.setAttribute(\"data-x\", screenX.value.toString());\n        draggableNode.value.setAttribute(\"data-y\", screenY.value.toString());\n        initInteract(draggableNode.value);\n      }\n    });\n    return {\n      draggableNode,\n      screenX,\n      screenY,\n      iconPath\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","onMounted","ref","computed","interact","InputPort","OutputPort","NodeStatus","name","components","props","initialX","type","Number","required","initialY","String","numInputs","numOutputs","color","icon","setup","screenX","screenY","draggableNode","iconPath","require","initInteract","selector","draggable","restrict","restriction","endOnly","elementRect","top","left","bottom","right","onmove","dragMoveListener","onend","onDragEnd","event","stopPropagation","target","parseFloat","getAttribute","x","dx","y","dy","style","webkitTransform","transform","setAttribute","toString","value","getBoundingClientRect","initialTransform"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/NodeObject.vue"],"sourcesContent":["<template>\n  <div ref=\"draggableNode\" class=\"node-object\">\n    <div class=\"node-container\">\n      <p class=\"node-name\">{{ name }}</p>\n      <div class=\"node\" :style=\"{ backgroundColor: color }\">\n        <img :src=\"iconPath\" alt=\"Node icon\" class=\"node-icon\" />\n        <div class=\"inputs\">\n          <InputPort v-for=\"(input, index) in numInputs\" :key=\"index\" />\n        </div>\n        <div class=\"outputs\">\n          <OutputPort v-for=\"(output, index) in numOutputs\" :key=\"index\" />\n        </div>\n      </div>\n      <div class=\"node-status\">\n        <NodeStatus />\n      </div>\n      <p class=\"node-type\">{{ type }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref, computed } from \"vue\";\nimport interact from \"interactjs\";\nimport InputPort from \"./node-components/InputPort.vue\";\nimport OutputPort from \"./node-components/OutputPort.vue\";\nimport NodeStatus from \"./node-components/NodeStatus.vue\";\n\nexport default defineComponent({\n  name: \"NodeObject\",\n  components: {\n    InputPort,\n    OutputPort,\n    NodeStatus,\n  },\n  props: {\n    initialX: {\n      type: Number,\n      required: true,\n    },\n    initialY: {\n      type: Number,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    numInputs: {\n      type: Number,\n      required: true,\n    },\n    numOutputs: {\n      type: Number,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    color: {\n      type: String,\n      required: true,\n    },\n    icon: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props) {\n    const screenX = ref(props.initialX);\n    const screenY = ref(props.initialY);\n    const draggableNode = ref(null);\n\n    const iconPath = computed(() => {\n      return require(`../assets/${props.icon}`);\n    });\n\n    const initInteract = (selector) => {\n      interact(selector).draggable({\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\n        },\n        onmove: dragMoveListener,\n        onend: onDragEnd,\n      });\n    };\n\n    const dragMoveListener = (event) => {\n      event.stopPropagation();\n\n      const target = event.target;\n\n      const initialX = parseFloat(target.getAttribute(\"data-x\")) || 0;\n      const initialY = parseFloat(target.getAttribute(\"data-y\")) || 0;\n\n      const x = initialX + event.dx;\n      const y = initialY + event.dy;\n\n      target.style.webkitTransform = target.style.transform =\n        \"translate(\" + x + \"px, \" + y + \"px)\";\n\n      target.setAttribute(\"data-x\", x.toString());\n      target.setAttribute(\"data-y\", y.toString());\n    };\n\n    const onDragEnd = (event) => {\n      const target = event.target;\n      screenX.value = target.getBoundingClientRect().left;\n      screenY.value = target.getBoundingClientRect().top;\n    };\n\n    onMounted(() => {\n      if (draggableNode.value) {\n        const initialTransform = `translate(${screenX.value}px, ${screenY.value}px)`;\n        draggableNode.value.style.transform = initialTransform;\n        draggableNode.value.setAttribute(\"data-x\", screenX.value.toString());\n        draggableNode.value.setAttribute(\"data-y\", screenY.value.toString());\n        initInteract(draggableNode.value);\n      }\n    });\n\n    return { draggableNode, screenX, screenY, iconPath };\n  },\n});\n</script>\n\n<style scoped>\n.node-object {\n  /* border-radius: 5%; */\n  border: 1px solid black;\n  /* width: 70px; */\n  /* height: 70px; */\n  /* background-color: rgb(255, 149, 51); */\n  /* color: #fff; */\n  padding: 5px;\n  position: absolute;\n}\n.node-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: Arial, sans-serif;\n}\n\n.node-name {\n  margin: 0;\n  margin-bottom: 5px;\n}\n\n.node {\n  border-radius: 3px;\n  position: relative;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  /* background-color: yellow; */\n}\n\n.inputs,\n.outputs {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n}\n\n.inputs {\n  left: -10px;\n}\n\n.outputs {\n  right: -10px;\n}\n\n.node-status {\n  margin: 0;\n  margin-top: 5px;\n}\n\n.node-type {\n  margin: 0;\n  margin-top: 5px;\n}\n\n.node-icon {\n  width: 10px;\n  height: 10px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}