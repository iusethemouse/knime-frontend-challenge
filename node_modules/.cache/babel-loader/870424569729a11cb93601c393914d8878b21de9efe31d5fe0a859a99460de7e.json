{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-306af221\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-canvas\"\n};\nexport function render(_ctx, _cache) {\n  const _component_SearchField = _resolveComponent(\"SearchField\");\n  const _component_NodeObject = _resolveComponent(\"NodeObject\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_SearchField, {\n    onAddNode: _ctx.addNodeFromSearch\n  }, null, 8 /* PROPS */, [\"onAddNode\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.nodes, node => {\n    return _openBlock(), _createBlock(_component_NodeObject, {\n      key: node.id,\n      initialX: node.x,\n      initialY: node.y,\n      name: node.name\n    }, null, 8 /* PROPS */, [\"initialX\", \"initialY\", \"name\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_SearchField","onAddNode","_ctx","addNodeFromSearch","_Fragment","_renderList","nodes","node","_createBlock","_component_NodeObject","key","id","initialX","x","initialY","y","name"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/MainCanvas.vue"],"sourcesContent":["<template>\n  <div class=\"main-canvas\">\n    <SearchField @add-node=\"addNodeFromSearch\" />\n    <NodeObject\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      :initialX=\"node.x\"\n      :initialY=\"node.y\"\n      :name=\"node.name\"\n    />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from \"vue\";\nimport SearchField from \"./SearchField.vue\";\nimport NodeObject from \"./NodeObject.vue\";\n\nexport default defineComponent({\n  name: \"MainCanvas\",\n  components: {\n    SearchField,\n    NodeObject,\n  },\n  setup() {\n    const nodes = ref([]);\n\n    const addNodeFromSearch = (nodeObject) => {\n      const x = 100;\n      const y = 100;\n      nodes.value.push({ nodeObject.id, x, y, nodeObject.name, nodeObject.type });\n    };\n\n    return { nodes, addNodeFromSearch };\n  },\n});\n</script>\n\n<!-- <template>\n  <div class=\"main-canvas\" @click=\"addNode\">\n    <SearchField />\n    <NodeObject\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      :initialX=\"node.x\"\n      :initialY=\"node.y\"\n    />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from \"vue\";\nimport SearchField from \"./SearchField.vue\";\nimport NodeObject from \"./NodeObject.vue\";\n\nexport default defineComponent({\n  name: \"MainCanvas\",\n  components: {\n    SearchField,\n    NodeObject,\n  },\n  setup() {\n    const nodes = ref([]);\n\n    const addNode = (event) => {\n      // if the user clicks a NodeObject, we don't want to add a new node\n      if (event.target.closest(\".node-object\")) {\n        event.stopPropagation();\n        return;\n      }\n      const rect = event.target.getBoundingClientRect();\n      const x = event.clientX - rect.left - 25;\n      const y = event.clientY - rect.top - 75;\n      nodes.value.push({ id: Date.now(), x, y });\n    };\n\n    return { nodes, addNode };\n  },\n});\n</script> -->\n\n<style scoped>\n.main-canvas {\n  border: 1px solid black;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-bottom: 50px;\n  height: calc(100vh - 150px);\n  width: calc(100vw - 100px);\n  position: relative;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;;;uBAAxBC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAA6CC,sBAAA;IAA/BC,SAAQ,EAAEC,IAAA,CAAAC;EAAiB,yC,kBACzCN,mBAAA,CAMEO,SAAA,QAAAC,WAAA,CALeH,IAAA,CAAAI,KAAK,EAAbC,IAAI;yBADbC,YAAA,CAMEC,qBAAA;MAJCC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZC,QAAQ,EAAEL,IAAI,CAACM,CAAC;MAChBC,QAAQ,EAAEP,IAAI,CAACQ,CAAC;MAChBC,IAAI,EAAET,IAAI,CAACS"},"metadata":{},"sourceType":"module","externalDependencies":[]}