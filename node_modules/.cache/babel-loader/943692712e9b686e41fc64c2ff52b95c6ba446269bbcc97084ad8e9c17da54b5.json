{"ast":null,"code":"import interact from \"interactjs\";\nexport default {\n  name: \"NodeObject\",\n  data() {\n    return {\n      screenX: 0,\n      screenY: 0\n    };\n  },\n  mounted: function () {\n    let draggableNode = this.$refs.draggableNode;\n    this.initInteract(draggableNode);\n  },\n  methods: {\n    initInteract: function (selector) {\n      interact(selector).draggable({\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: {\n            top: 0,\n            left: 0,\n            bottom: 1,\n            right: 1\n          }\n        },\n        // call this function on every dragmove event\n        onmove: this.dragMoveListener,\n        // call this function on every dragend event\n        onend: this.onDragEnd\n      });\n    },\n    dragMoveListener: function (event) {\n      var target = event.target,\n        // keep the dragged position in the data-x/data-y attributes\n        x = (parseFloat(target.getAttribute(\"data-x\")) || this.screenX) + event.dx,\n        y = (parseFloat(target.getAttribute(\"data-y\")) || this.screenY) + event.dy;\n\n      // translate the element\n      target.style.webkitTransform = target.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n\n      // update the posiion attributes\n      target.setAttribute(\"data-x\", x);\n      target.setAttribute(\"data-y\", y);\n    },\n    onDragEnd: function (event) {\n      var target = event.target;\n      console.log(target);\n      // update the state\n      this.screenX = target.getBoundingClientRect().left;\n      this.screenY = target.getBoundingClientRect().top;\n    }\n  }\n};","map":{"version":3,"names":["interact","name","data","screenX","screenY","mounted","draggableNode","$refs","initInteract","methods","selector","draggable","restrict","restriction","endOnly","elementRect","top","left","bottom","right","onmove","dragMoveListener","onend","onDragEnd","event","target","x","parseFloat","getAttribute","dx","y","dy","style","webkitTransform","transform","setAttribute","console","log","getBoundingClientRect"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/NodeObject.vue"],"sourcesContent":["<template>\n    <div ref=\"draggableNode\" class=\"node-object\">\n      Draggable Node\n    </div>\n</template>\n\n<script>\nimport interact from \"interactjs\";\n\nexport default {\n  name: \"NodeObject\",\n  data() {\n    return {\n      screenX: 0,\n      screenY: 0\n    };\n  },\n  mounted: function() {\n    let draggableNode = this.$refs.draggableNode;\n    this.initInteract(draggableNode);\n  },\n  methods: {\n    initInteract: function(selector) {\n      interact(selector).draggable({\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n        },\n\n        // call this function on every dragmove event\n        onmove: this.dragMoveListener,\n        \n        // call this function on every dragend event\n        onend: this.onDragEnd\n      });\n    },\n    dragMoveListener: function(event) {\n      var target = event.target,\n        // keep the dragged position in the data-x/data-y attributes\n        x =\n          (parseFloat(target.getAttribute(\"data-x\")) || this.screenX) +\n          event.dx,\n        y =\n          (parseFloat(target.getAttribute(\"data-y\")) || this.screenY) +\n          event.dy;\n\n      // translate the element\n      target.style.webkitTransform = target.style.transform =\n        \"translate(\" + x + \"px, \" + y + \"px)\";\n\n      // update the posiion attributes\n      target.setAttribute(\"data-x\", x);\n      target.setAttribute(\"data-y\", y);\n    },\n    onDragEnd: function(event) {\n      var target = event.target;\n      console.log(target);\n      // update the state\n      this.screenX = target.getBoundingClientRect().left;\n      this.screenY = target.getBoundingClientRect().top;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.node-object {\n  width: 100px;\n  height: 100px;\n  background-color: teal;\n  color: #fff;\n  padding: 5px;\n  position: absolute;\n}\n</style>\n"],"mappings":"AAOA,OAAOA,QAAO,MAAO,YAAY;AAEjC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAA,EAAW;IAClB,IAAIC,aAAY,GAAI,IAAI,CAACC,KAAK,CAACD,aAAa;IAC5C,IAAI,CAACE,YAAY,CAACF,aAAa,CAAC;EAClC,CAAC;EACDG,OAAO,EAAE;IACPD,YAAY,EAAE,SAAAA,CAASE,QAAQ,EAAE;MAC/BV,QAAQ,CAACU,QAAQ,CAAC,CAACC,SAAS,CAAC;QAC3B;QACAC,QAAQ,EAAE;UACRC,WAAW,EAAE,QAAQ;UACrBC,OAAO,EAAE,IAAI;UACbC,WAAW,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEC,MAAM,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAE;QACtD,CAAC;QAED;QACAC,MAAM,EAAE,IAAI,CAACC,gBAAgB;QAE7B;QACAC,KAAK,EAAE,IAAI,CAACC;MACd,CAAC,CAAC;IACJ,CAAC;IACDF,gBAAgB,EAAE,SAAAA,CAASG,KAAK,EAAE;MAChC,IAAIC,MAAK,GAAID,KAAK,CAACC,MAAM;QACvB;QACAC,CAAA,GACE,CAACC,UAAU,CAACF,MAAM,CAACG,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,CAACzB,OAAO,IAC1DqB,KAAK,CAACK,EAAE;QACVC,CAAA,GACE,CAACH,UAAU,CAACF,MAAM,CAACG,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,CAACxB,OAAO,IAC1DoB,KAAK,CAACO,EAAE;;MAEZ;MACAN,MAAM,CAACO,KAAK,CAACC,eAAc,GAAIR,MAAM,CAACO,KAAK,CAACE,SAAQ,GAClD,YAAW,GAAIR,CAAA,GAAI,MAAK,GAAII,CAAA,GAAI,KAAK;;MAEvC;MACAL,MAAM,CAACU,YAAY,CAAC,QAAQ,EAAET,CAAC,CAAC;MAChCD,MAAM,CAACU,YAAY,CAAC,QAAQ,EAAEL,CAAC,CAAC;IAClC,CAAC;IACDP,SAAS,EAAE,SAAAA,CAASC,KAAK,EAAE;MACzB,IAAIC,MAAK,GAAID,KAAK,CAACC,MAAM;MACzBW,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;MACnB;MACA,IAAI,CAACtB,OAAM,GAAIsB,MAAM,CAACa,qBAAqB,EAAE,CAACrB,IAAI;MAClD,IAAI,CAACb,OAAM,GAAIqB,MAAM,CAACa,qBAAqB,EAAE,CAACtB,GAAG;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}