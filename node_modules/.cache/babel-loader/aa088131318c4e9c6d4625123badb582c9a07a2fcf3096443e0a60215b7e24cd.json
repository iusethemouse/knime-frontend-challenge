{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-306af221\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SearchField = _resolveComponent(\"SearchField\");\n  const _component_NodeObject = _resolveComponent(\"NodeObject\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_SearchField, {\n    onAddNode: _ctx.addNodeFromSearch\n  }, null, 8 /* PROPS */, [\"onAddNode\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.nodes, node => {\n    return _openBlock(), _createBlock(_component_NodeObject, {\n      key: node.nodeObject.id,\n      initialX: node.x,\n      initialY: node.y,\n      name: node.nodeObject.name,\n      numInputs: node.nodeObject.numInputs,\n      numOutputs: node.nodeObject.numOutputs,\n      type: node.nodeObject.type,\n      color: node.nodeObject.color,\n      iconPath: node.nodeObject.icon\n    }, null, 8 /* PROPS */, [\"initialX\", \"initialY\", \"name\", \"numInputs\", \"numOutputs\", \"type\", \"color\", \"iconPath\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_SearchField","onAddNode","_ctx","addNodeFromSearch","_Fragment","_renderList","nodes","node","_createBlock","_component_NodeObject","key","nodeObject","id","initialX","x","initialY","y","name","numInputs","numOutputs","type","color","iconPath","icon"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/MainCanvas.vue"],"sourcesContent":["<template>\n  <div class=\"main-canvas\">\n    <SearchField @add-node=\"addNodeFromSearch\" />\n    <NodeObject\n      v-for=\"node in nodes\"\n      :key=\"node.nodeObject.id\"\n      :initialX=\"node.x\"\n      :initialY=\"node.y\"\n      :name=\"node.nodeObject.name\"\n      :numInputs=\"node.nodeObject.numInputs\"\n      :numOutputs=\"node.nodeObject.numOutputs\"\n      :type=\"node.nodeObject.type\"\n      :color=\"node.nodeObject.color\"\n      :iconPath=\"node.nodeObject.icon\"\n    />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from \"vue\";\nimport SearchField from \"./SearchField.vue\";\nimport NodeObject from \"./NodeObject.vue\";\n\nexport default defineComponent({\n  name: \"MainCanvas\",\n  components: {\n    SearchField,\n    NodeObject,\n  },\n  setup() {\n    const nodes = ref([]);\n\n    const addNodeFromSearch = (nodeObject) => {\n      const x = 100;\n      const y = 100;\n      nodes.value.push({ nodeObject, x, y });\n    };\n\n    return { nodes, addNodeFromSearch };\n  },\n});\n</script>\n\n<style scoped>\n.main-canvas {\n  border: 1px solid black;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-bottom: 50px;\n  height: calc(100vh - 150px);\n  width: calc(100vw - 100px);\n  position: relative;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;;;uBAAxBC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,YAAA,CAA6CC,sBAAA;IAA/BC,SAAQ,EAAEC,IAAA,CAAAC;EAAiB,yC,kBACzCN,mBAAA,CAWEO,SAAA,QAAAC,WAAA,CAVeH,IAAA,CAAAI,KAAK,EAAbC,IAAI;yBADbC,YAAA,CAWEC,qBAAA;MATCC,GAAG,EAAEH,IAAI,CAACI,UAAU,CAACC,EAAE;MACvBC,QAAQ,EAAEN,IAAI,CAACO,CAAC;MAChBC,QAAQ,EAAER,IAAI,CAACS,CAAC;MAChBC,IAAI,EAAEV,IAAI,CAACI,UAAU,CAACM,IAAI;MAC1BC,SAAS,EAAEX,IAAI,CAACI,UAAU,CAACO,SAAS;MACpCC,UAAU,EAAEZ,IAAI,CAACI,UAAU,CAACQ,UAAU;MACtCC,IAAI,EAAEb,IAAI,CAACI,UAAU,CAACS,IAAI;MAC1BC,KAAK,EAAEd,IAAI,CAACI,UAAU,CAACU,KAAK;MAC5BC,QAAQ,EAAEf,IAAI,CAACI,UAAU,CAACY"},"metadata":{},"sourceType":"module","externalDependencies":[]}