{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SearchField = _resolveComponent(\"SearchField\");\n  const _component_NodeObject = _resolveComponent(\"NodeObject\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"main-canvas\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.addNode && _ctx.addNode(...args))\n  }, [_createVNode(_component_SearchField), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.nodes, node => {\n    return _openBlock(), _createBlock(_component_NodeObject, {\n      key: node.id,\n      initialX: node.x,\n      initialY: node.y,\n      onSelected: $event => _ctx.handleSelection(node.id, $event)\n    }, null, 8 /* PROPS */, [\"initialX\", \"initialY\", \"onSelected\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","class","onClick","_cache","args","_ctx","addNode","_createVNode","_component_SearchField","_Fragment","_renderList","nodes","node","_createBlock","_component_NodeObject","key","id","initialX","x","initialY","y","onSelected","$event","handleSelection"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/MainCanvas.vue"],"sourcesContent":["<template>\n  <div class=\"main-canvas\" @click=\"addNode\">\n    <SearchField />\n    <NodeObject\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      :initialX=\"node.x\"\n      :initialY=\"node.y\"\n      @selected=\"handleSelection(node.id, $event)\"\n    />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from \"vue\";\nimport SearchField from \"./SearchField.vue\";\nimport NodeObject from \"./NodeObject.vue\";\n\nconst selectedNodeId = ref(null);\n\nconst handleSelection = (id, isSelected) => {\n  if (isSelected) {\n    selectedNodeId.value = id;\n  } else {\n    selectedNodeId.value = null;\n  }\n};\n\nexport default defineComponent({\n  name: \"MainCanvas\",\n  components: {\n    SearchField,\n    NodeObject,\n  },\n  setup() {\n    const nodes = ref([]);\n\n    const addNode = (event) => {\n      // if the user clicks a NodeObject, we don't want to add a new node\n      if (event.target.closest(\".node-object\")) {\n        event.stopPropagation();\n        return;\n      }\n      const rect = event.target.getBoundingClientRect();\n      const x = event.clientX - rect.left - 25;\n      const y = event.clientY - rect.top - 75;\n      nodes.value.push({ id: Date.now(), x, y });\n    };\n\n    return { nodes, addNode };\n  },\n});\n</script>\n\n<style scoped>\n.main-canvas {\n  border: 1px solid black;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-bottom: 50px;\n  height: calc(100vh - 150px);\n  width: calc(100vw - 100px);\n  position: relative;\n}\n</style>\n"],"mappings":";;;;uBACEA,mBAAA,CASM;IATDC,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,OAAA,IAAAD,IAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;MACtCG,YAAA,CAAeC,sBAAA,I,kBACfR,mBAAA,CAMES,SAAA,QAAAC,WAAA,CALeL,IAAA,CAAAM,KAAK,EAAbC,IAAI;yBADbC,YAAA,CAMEC,qBAAA;MAJCC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZC,QAAQ,EAAEL,IAAI,CAACM,CAAC;MAChBC,QAAQ,EAAEP,IAAI,CAACQ,CAAC;MAChBC,UAAQ,EAAAC,MAAA,IAAEjB,IAAA,CAAAkB,eAAe,CAACX,IAAI,CAACI,EAAE,EAAEM,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}