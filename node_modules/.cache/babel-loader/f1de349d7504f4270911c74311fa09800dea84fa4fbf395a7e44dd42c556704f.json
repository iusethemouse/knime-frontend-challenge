{"ast":null,"code":"import { onMounted, ref, computed } from \"vue\";\nimport interact from \"interactjs\";\nimport InputPort from \"./node-components/InputPort.vue\";\nimport OutputPort from \"./node-components/OutputPort.vue\";\nimport NodeStatus from \"./node-components/NodeStatus.vue\";\nexport default {\n  __name: 'NodeObject',\n  props: {\n    initialX: {\n      type: Number,\n      required: true\n    },\n    initialY: {\n      type: Number,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    numInputs: {\n      type: Number,\n      required: true\n    },\n    numOutputs: {\n      type: Number,\n      required: true\n    },\n    type: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    },\n    icon: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const screenX = ref(props.initialX);\n    const screenY = ref(props.initialY);\n    const draggableNode = ref(null);\n    const iconPath = computed(() => {\n      return require(`../assets/${props.icon}`);\n    });\n    const initInteract = selector => {\n      interact(selector.querySelector(\".node-body\")).draggable({\n        restrict: {\n          restriction: \"parent\",\n          endOnly: true,\n          elementRect: {\n            top: 0,\n            left: 0,\n            bottom: 1,\n            right: 1\n          }\n        },\n        onmove: dragMoveListener,\n        onend: onDragEnd\n      });\n    };\n    const dragMoveListener = event => {\n      event.stopPropagation();\n      const selector = event.target.closest(\".node-object\");\n      const initialX = parseFloat(selector.getAttribute(\"data-x\")) || 0;\n      const initialY = parseFloat(selector.getAttribute(\"data-y\")) || 0;\n      const x = initialX + event.dx;\n      const y = initialY + event.dy;\n      selector.style.webkitTransform = selector.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n      selector.setAttribute(\"data-x\", x.toString());\n      selector.setAttribute(\"data-y\", y.toString());\n    };\n    const onDragEnd = event => {\n      const target = event.target;\n      screenX.value = target.getBoundingClientRect().left;\n      screenY.value = target.getBoundingClientRect().top;\n    };\n    onMounted(() => {\n      if (draggableNode.value) {\n        const initialTransform = `translate(${screenX.value}px, ${screenY.value}px)`;\n        draggableNode.value.style.transform = initialTransform;\n        draggableNode.value.setAttribute(\"data-x\", screenX.value.toString());\n        draggableNode.value.setAttribute(\"data-y\", screenY.value.toString());\n        initInteract(draggableNode.value);\n      }\n    });\n    const __returned__ = {\n      props,\n      screenX,\n      screenY,\n      draggableNode,\n      iconPath,\n      initInteract,\n      dragMoveListener,\n      onDragEnd,\n      onMounted,\n      ref,\n      computed,\n      get interact() {\n        return interact;\n      },\n      InputPort,\n      OutputPort,\n      NodeStatus\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","computed","interact","InputPort","OutputPort","NodeStatus","screenX","props","initialX","screenY","initialY","draggableNode","iconPath","require","icon","initInteract","selector","querySelector","draggable","restrict","restriction","endOnly","elementRect","top","left","bottom","right","onmove","dragMoveListener","onend","onDragEnd","event","stopPropagation","target","closest","parseFloat","getAttribute","x","dx","y","dy","style","webkitTransform","transform","setAttribute","toString","value","getBoundingClientRect","initialTransform"],"sources":["/Users/ivan/dev/knime-frontend-challenge/interactive-workflow/src/components/NodeObject.vue"],"sourcesContent":["<template>\n  <div ref=\"draggableNode\" class=\"node-object\">\n    <div class=\"node-container\">\n      <p class=\"node-name\">{{ name }}</p>\n      <div class=\"node-body-container\">\n        <div class=\"inputs\">\n          <InputPort v-for=\"(input, index) in numInputs\" :key=\"index\" />\n        </div>\n        <div class=\"node-body\" :style=\"{ backgroundColor: color }\">\n          <img :src=\"iconPath\" alt=\"Node icon\" class=\"node-icon\" />\n        </div>\n        <div class=\"outputs\">\n          <OutputPort v-for=\"(output, index) in numOutputs\" :key=\"index\" />\n        </div>\n      </div>\n      <NodeStatus />\n      <p class=\"node-type\">{{ type }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref, computed, defineProps } from \"vue\";\nimport interact from \"interactjs\";\nimport InputPort from \"./node-components/InputPort.vue\";\nimport OutputPort from \"./node-components/OutputPort.vue\";\nimport NodeStatus from \"./node-components/NodeStatus.vue\";\n\nconst props = defineProps({\n  initialX: {\n    type: Number,\n    required: true,\n  },\n  initialY: {\n    type: Number,\n    required: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  numInputs: {\n    type: Number,\n    required: true,\n  },\n  numOutputs: {\n    type: Number,\n    required: true,\n  },\n  type: {\n    type: String,\n    required: true,\n  },\n  color: {\n    type: String,\n    required: true,\n  },\n  icon: {\n    type: String,\n    required: true,\n  },\n});\n\nconst screenX = ref(props.initialX);\nconst screenY = ref(props.initialY);\nconst draggableNode = ref(null);\n\nconst iconPath = computed(() => {\n  return require(`../assets/${props.icon}`);\n});\n\nconst initInteract = (selector) => {\n  interact(selector.querySelector(\".node-body\")).draggable({\n    restrict: {\n      restriction: \"parent\",\n      endOnly: true,\n      elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\n    },\n    onmove: dragMoveListener,\n    onend: onDragEnd,\n  });\n};\n\nconst dragMoveListener = (event) => {\n  event.stopPropagation();\n\n  const selector = event.target.closest(\".node-object\");\n\n  const initialX = parseFloat(selector.getAttribute(\"data-x\")) || 0;\n  const initialY = parseFloat(selector.getAttribute(\"data-y\")) || 0;\n\n  const x = initialX + event.dx;\n  const y = initialY + event.dy;\n\n  selector.style.webkitTransform = selector.style.transform =\n    \"translate(\" + x + \"px, \" + y + \"px)\";\n\n  selector.setAttribute(\"data-x\", x.toString());\n  selector.setAttribute(\"data-y\", y.toString());\n};\n\nconst onDragEnd = (event) => {\n  const target = event.target;\n  screenX.value = target.getBoundingClientRect().left;\n  screenY.value = target.getBoundingClientRect().top;\n};\n\nonMounted(() => {\n  if (draggableNode.value) {\n    const initialTransform = `translate(${screenX.value}px, ${screenY.value}px)`;\n    draggableNode.value.style.transform = initialTransform;\n    draggableNode.value.setAttribute(\"data-x\", screenX.value.toString());\n    draggableNode.value.setAttribute(\"data-y\", screenY.value.toString());\n    initInteract(draggableNode.value);\n  }\n});\n</script>\n\n<style scoped>\n.node-object {\n  border: 1px solid black;\n  padding: 5px;\n  position: absolute;\n}\n.node-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: Arial, sans-serif;\n}\n\n.node-name {\n  margin: 0;\n  margin-bottom: 5px;\n}\n\n.node-body-container {\n  position: relative;\n  width: 40px;\n  height: 40px;\n}\n\n.node-body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 3px;\n  width: 100%;\n  height: 100%;\n  background-color: #f19a4a;\n}\n\n.inputs,\n.outputs {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n}\n\n.inputs {\n  left: -10px;\n}\n\n.outputs {\n  right: -10px;\n}\n\n.node-status {\n  margin: 0;\n  margin-top: 5px;\n}\n\n.node-type {\n  margin: 0;\n  margin-top: 5px;\n}\n\n.node-icon {\n  width: 20px;\n  height: 20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}